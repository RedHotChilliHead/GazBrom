--
-- PostgreSQL database dump
--

-- Dumped from database version 16.2 (Debian 16.2-1.pgdg120+2)
-- Dumped by pg_dump version 16.2 (Debian 16.2-1.pgdg120+2)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: employeesapp_employee; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.employeesapp_employee (
    id bigint NOT NULL,
    name character varying(150) NOT NULL,
    "position" text NOT NULL,
    date_of_empl timestamp with time zone NOT NULL,
    salary numeric(8,2) NOT NULL,
    chief character varying(150) NOT NULL,
    hierarchy integer NOT NULL,
    photo character varying(100)
);


ALTER TABLE public.employeesapp_employee OWNER TO postgres;

--
-- Name: employeesapp_employee_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.employeesapp_employee ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.employeesapp_employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add employee	7	add_employee
26	Can change employee	7	change_employee
27	Can delete employee	7	delete_employee
28	Can view employee	7	view_employee
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$720000$xLXYUA0nZFq1k7ao3ALKqt$nYqQCrjGWOWzqkQsYhTLveYHA2fQNJ4NqItswLWhpME=	2024-08-27 11:33:43.78962+00	f	redhot				f	t	2024-08-27 11:33:43.449411+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	employeesapp	employee
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-08-27 11:31:44.03742+00
2	auth	0001_initial	2024-08-27 11:31:44.062692+00
3	admin	0001_initial	2024-08-27 11:31:44.068971+00
4	admin	0002_logentry_remove_auto_add	2024-08-27 11:31:44.071125+00
5	admin	0003_logentry_add_action_flag_choices	2024-08-27 11:31:44.073507+00
6	contenttypes	0002_remove_content_type_name	2024-08-27 11:31:44.07789+00
7	auth	0002_alter_permission_name_max_length	2024-08-27 11:31:44.080294+00
8	auth	0003_alter_user_email_max_length	2024-08-27 11:31:44.08252+00
9	auth	0004_alter_user_username_opts	2024-08-27 11:31:44.084621+00
10	auth	0005_alter_user_last_login_null	2024-08-27 11:31:44.086778+00
11	auth	0006_require_contenttypes_0002	2024-08-27 11:31:44.087073+00
12	auth	0007_alter_validators_add_error_messages	2024-08-27 11:31:44.089946+00
13	auth	0008_alter_user_username_max_length	2024-08-27 11:31:44.093725+00
14	auth	0009_alter_user_last_name_max_length	2024-08-27 11:31:44.095826+00
15	auth	0010_alter_group_name_max_length	2024-08-27 11:31:44.098128+00
16	auth	0011_update_proxy_permissions	2024-08-27 11:31:44.100032+00
17	auth	0012_alter_user_first_name_max_length	2024-08-27 11:31:44.102094+00
18	employeesapp	0001_initial	2024-08-27 11:31:44.104275+00
19	employeesapp	0002_employee_hierarchy	2024-08-27 11:31:44.105639+00
20	employeesapp	0003_alter_employee_options_employee_photo	2024-08-27 11:31:44.106629+00
21	employeesapp	0004_alter_employee_photo	2024-08-27 11:31:44.107259+00
22	employeesapp	0005_alter_employee_chief_alter_employee_name_and_more	2024-08-27 11:31:44.113312+00
23	sessions	0001_initial	2024-08-27 11:31:44.11688+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
kqg2pyf0x00arw8hw8elw648oinyvse1	.eJxVjEEOwiAQRe_C2pACZWBcuvcMZBhAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hSuIslDj9bpH4kdsO0p3abZY8t3WZotwVedAur3PKz8vh_h1U6vVbD-i8IUS0PgEhcNbECtnoAs5Z0hlAQ1Yx0mAsjtaMBRAsl2K80izeH8f2NzI:1siuSF:q3zCgt1sM-Z0do1M96tCROvhbmqJOFRvN8E-LCkJepU	2024-09-10 11:33:43.790601+00
\.


--
-- Data for Name: employeesapp_employee; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.employeesapp_employee (id, name, "position", date_of_empl, salary, chief, hierarchy, photo) FROM stdin;
50105	Erin Pearcy	Business development manager	2011-02-06 00:00:00+00	1603.63	Aaron Mason	5	images/1692550575_pushinka-top-p-kartinka-ofisnogo-rabotnika-instagram-14_JnZEAO7.jpg
50041	Alejandro Tracy	Chief public relations officer	2012-05-21 00:00:00+00	9711.48	Jose Ward	2	images/_2021-01-28_173341.png
50028	Jose Ward	Сhief executive officer	2012-12-06 00:00:00+00	14493.33	-	1	images/1614510889_15-p-na-belom-fone-chelovek-18_pOOp2I7_RHhCmbK.jpg
50084	Elizabeth Wilson	Project manager	2024-10-04 00:00:00+00	2673.98	Anthony Barlow	4	images/18883ze5a3b697_hWYrxy9_bH1mEZr.jpg
50082	Emma White	Production manager	2002-01-27 00:00:00+00	2723.98	Jack Bott	4	images/1656971654_63-mykaleidoscope-ru-p-platya-dlya-raboti-v-ofise-devushka-krasiv-67_b_jcPpm9b.jpg
50029	Emma Mason	Сhief financial officer	2006-10-02 00:00:00+00	8623.24	Jose Ward	2	
50030	Jacob Berrington	Chief executive officer	1995-01-12 00:00:00+00	7530.85	Jose Ward	2	
50031	Oliver Finch	Financial director, Managing director	2023-03-10 00:00:00+00	8128.60	Jose Ward	2	
50032	Alexander Haig	Marketing director	2008-04-17 00:00:00+00	5310.74	Jose Ward	2	
50033	Madison Berrington	Chief administrative officerHuman resources director	2001-05-19 00:00:00+00	6634.91	Jose Ward	2	
50034	Olivia Vance	The chief economist	2009-06-18 00:00:00+00	6034.57	Jose Ward	2	
50035	Alexander Cloud	The chief engineer	2014-04-16 00:00:00+00	7635.86	Jose Ward	2	
50036	Thomas Davidson	The chief accountant	2006-01-03 00:00:00+00	8851.99	Jose Ward	2	
50037	Oliver Saunders	Chief customer service officer	2000-07-23 00:00:00+00	8489.65	Jose Ward	2	
50038	James Tracy	Chief technical officer	2002-01-06 00:00:00+00	9808.92	Jose Ward	2	
50039	Jonathan Miln	Chief safety officer	2000-11-12 00:00:00+00	6029.78	Jose Ward	2	
50040	Jacob Saunders	Chief purchasing officer	2005-04-14 00:00:00+00	6067.94	Jose Ward	2	
50043	Jack Bott	Deputy director	2015-07-22 00:00:00+00	3681.76	Alexander Cloud	3	
50044	William Dean	Managing Director	2002-06-08 00:00:00+00	4300.81	Alexander Haig	3	
50045	Jonathan Chapman	Audit director	2017-07-22 00:00:00+00	3885.91	Emma Mason	3	
50046	Albert Tracy	Audit director	2016-12-03 00:00:00+00	4873.08	Jacob Berrington	3	
50047	Jason Ward	Managing Director	1997-08-21 00:00:00+00	3139.46	Jacob Saunders	3	
50048	Jaden White	Marketing Director	2015-01-27 00:00:00+00	3956.30	James Tracy	3	
50049	Ella Kirk	HR Director	2013-05-23 00:00:00+00	3383.44	Jonathan Miln	3	
50050	William Audley	HR Director	2014-03-26 00:00:00+00	4280.63	Madison Berrington	3	
50051	Alfred Barlow	HR Director	2000-09-03 00:00:00+00	3321.00	Oliver Finch	3	
50052	Joseph Audley	Deputy director	2018-10-01 00:00:00+00	4961.56	Oliver Saunders	3	
50053	Eleanor Chapman	Budget director	2006-10-03 00:00:00+00	4780.36	Olivia Vance	3	
50054	Olivia Chapman	Deputy director	2013-12-21 00:00:00+00	4466.83	Thomas Davidson	3	
50055	Alejandro Audley	Production manager	2023-04-16 00:00:00+00	2383.93	Jaden White	4	
50056	Anthony Crocket	Project manager	2013-02-13 00:00:00+00	2644.34	Albert Tracy	4	
50057	Ashton Hawkins	Project manager	2016-11-14 00:00:00+00	2915.35	Jaden White	4	
50058	Ashton Barlow	Senior Specialist	1996-07-13 00:00:00+00	2886.01	Alfred Barlow	4	
50059	Elizabeth Benson	Project manager	2010-03-08 00:00:00+00	2763.86	Ella Kirk	4	
50060	Jonathan Vance	HR manager	2018-09-24 00:00:00+00	2251.62	Eleanor Chapman	4	
50062	Harry Cowell	Procurement specialist	2024-02-20 00:00:00+00	2204.56	William Audley	4	
50063	Adam White	Real Estate Specialist	2011-12-22 00:00:00+00	2011.73	Jonathan Chapman	4	
50064	Alexander Leman	IT Specialist	2017-04-21 00:00:00+00	2718.18	Joseph Audley	4	
50065	Jacob Fletcher	Project manager	2000-11-07 00:00:00+00	2449.44	Albert Tracy	4	
50066	Evelyn Miln	Production manager	2007-09-23 00:00:00+00	2633.73	Jason Ward	4	
50067	Joshua Bott	Project manager	2013-12-28 00:00:00+00	2799.92	William Audley	4	
50068	Thomas Miln	Senior manager	2024-01-08 00:00:00+00	2106.96	Jack Bott	4	
50069	Justin Carey	Project manager	1997-03-25 00:00:00+00	2368.07	William Dean	4	
50070	Antonio Larkins	Tourism manager	2024-10-26 00:00:00+00	2204.45	Jaden White	4	
50071	Abigail Tracy	Branch manager	1995-12-21 00:00:00+00	2392.91	Alfred Barlow	4	
50072	Olivia Moor	Product manager	2022-06-24 00:00:00+00	2708.72	Joseph Audley	4	
50073	Jason Johnson	Tourism manager	2001-08-26 00:00:00+00	2522.29	Jack Bott	4	
50074	Jeffery Wood	Project manager	1998-02-04 00:00:00+00	2308.84	Anthony Barlow	4	
50075	Eleanor White	Senior Specialist	2008-12-03 00:00:00+00	2298.13	Olivia Chapman	4	
50076	Joshua Chapman	Tourism manager	1997-06-23 00:00:00+00	2987.23	Jaden White	4	
50077	Antonio Cowell	Senior manager	2003-12-24 00:00:00+00	2700.64	William Dean	4	
50078	Jeffery Haig	Project manager	2004-07-11 00:00:00+00	2533.38	Jaden White	4	
50079	Joshua Fletcher	Procurement specialist	2023-04-25 00:00:00+00	2001.16	William Audley	4	
50080	Jesus Saunders	Real Estate Specialist	2023-10-18 00:00:00+00	2133.33	Albert Tracy	4	
50081	Alex Green	Project manager	1996-04-10 00:00:00+00	2117.56	Albert Tracy	4	
50083	Sophia Wilson	Senior Specialist	2010-07-25 00:00:00+00	2852.67	Anthony Barlow	4	
50085	Ethan Gill	Product manager	2011-05-13 00:00:00+00	2375.52	William Dean	4	
50086	Alan Berrington	Senior manager	2003-02-02 00:00:00+00	2162.06	Alfred Barlow	4	
50087	Joshua Harrison	Procurement specialist	1995-02-28 00:00:00+00	2640.33	Ella Kirk	4	
50088	Alan Moor	Project manager	2024-08-17 00:00:00+00	2209.86	Olivia Chapman	4	
50089	Jeremiah Tracy	Senior Specialist	2019-07-03 00:00:00+00	2793.52	Olivia Chapman	4	
50090	Aidan Gill	Procurement specialist	2001-06-03 00:00:00+00	2046.71	Ella Kirk	4	
50091	Jacob Attwood	Development manager	2015-07-06 00:00:00+00	2288.79	Jack Bott	4	
50092	Charlotte Dodson	Tourism manager	2003-06-05 00:00:00+00	2322.27	Albert Tracy	4	
50093	Jacob Gibbs	Senior manager	2008-12-11 00:00:00+00	2668.58	Anthony Barlow	4	
50094	Jordan Harrison	Senior Specialist	2003-08-27 00:00:00+00	2794.27	Anthony Barlow	4	
50095	Aaron Mason	Development manager	2016-04-23 00:00:00+00	2486.21	William Dean	4	
50096	James White	Project manager	2004-08-22 00:00:00+00	2733.57	Anthony Barlow	4	
50097	Emma Vance	HR manager	2016-01-07 00:00:00+00	2500.40	Ella Kirk	4	
50042	Anthony Barlow	Marketing Director	2017-12-25 00:00:00+00	4799.52	Alejandro Tracy	3	images/1670339031_8-kartinkin-net-p-kartinka-ofisnogo-rabotnika-vkontakte-11.jpg
50061	Aaron Evans	Branch manager	1999-06-25 00:00:00+00	2113.14	Anthony Barlow	4	images/Coporate-Business-15-scaled.jpg
50098	Sophia Boolman	Project manager	2013-02-18 00:00:00+00	2145.37	Jack Bott	4	
50099	Joshua Benson	Project manager	1996-02-05 00:00:00+00	2665.83	Albert Tracy	4	
50100	Isabella Mason	Branch manager	2017-04-10 00:00:00+00	2187.94	William Dean	4	
50101	Charlie Evans	Senior Specialist	2002-09-26 00:00:00+00	2994.51	Jaden White	4	
50102	Jaden Gibbs	Development manager	2018-02-11 00:00:00+00	2938.80	Jason Ward	4	
50103	Olivia Haig	Project manager	2016-11-27 00:00:00+00	2326.58	Albert Tracy	4	
50104	Jaden Wood	Project manager	2024-05-26 00:00:00+00	2117.33	Alfred Barlow	4	
50106	Sophia Moor	Recruitment manager	1999-04-13 00:00:00+00	1928.31	Jonathan Vance	5	
50107	Ava Bott	Talent acquisition manager	2008-10-13 00:00:00+00	1358.82	Antonio Larkins	5	
50108	Oliver Audley	Customer service manager	2002-08-09 00:00:00+00	1516.89	Eleanor White	5	
50109	William Rose	Administrative assistant	2012-05-16 00:00:00+00	1539.24	Jacob Gibbs	5	
50110	Joshua Harrison	Sales manager	2013-03-14 00:00:00+00	1900.02	Jordan Harrison	5	
50111	Jaden Chapman	Legal counsel	2005-03-22 00:00:00+00	1203.23	Emma White	5	
50112	Jack Cloud	Customer service manager	1995-05-07 00:00:00+00	1060.42	Jordan Harrison	5	
50113	Alfred Gibbs	Recruitment manager	2016-07-14 00:00:00+00	1660.87	Elizabeth Wilson	5	
50114	Thomas Johnson	Sales manager	1996-08-16 00:00:00+00	1906.77	Thomas Miln	5	
50115	Mia Ward	Recruitment manager	2019-11-18 00:00:00+00	1543.39	Isabella Mason	5	
50116	Jacob Porter	Administrative assistant	2009-02-14 00:00:00+00	1581.41	Ethan Gill	5	
50117	Emma Wood	Administrative assistant	2021-10-15 00:00:00+00	1888.66	Thomas Miln	5	
50118	Justin Cloud	Legal counsel	2003-02-03 00:00:00+00	1905.54	Alex Green	5	
50119	Aaron Fletcher	Business development manager	2021-06-22 00:00:00+00	1501.42	Antonio Larkins	5	
50120	Olivia White	Recruitment manager	2018-03-21 00:00:00+00	1267.83	Ashton Hawkins	5	
50121	Joseph Benson	Legal counsel	2006-07-04 00:00:00+00	1004.43	Emma Vance	5	
50122	Albert Larkins	Legal counsel	2005-07-12 00:00:00+00	1645.48	Anthony Crocket	5	
50123	Anthony Vance	Legal counsel	2024-01-16 00:00:00+00	1903.86	Jonathan Vance	5	
50124	Jeremiah Gill	Software engineer	2009-09-04 00:00:00+00	1768.34	Charlotte Dodson	5	
50125	Oscar Mason	Business development manager	2022-03-04 00:00:00+00	1246.67	Joshua Fletcher	5	
50126	Alex Pearcy	Legal counsel	2004-08-08 00:00:00+00	1639.27	Antonio Larkins	5	
50127	Ella Miln	Customer service manager	2005-12-23 00:00:00+00	1691.48	Thomas Miln	5	
50128	Jackson Haig	Software engineer	2016-05-26 00:00:00+00	1658.86	Elizabeth Wilson	5	
50129	Alan Johnson	Assistant manager	2008-07-21 00:00:00+00	1822.69	Ethan Gill	5	
50130	Oscar Sheldon	Talent acquisition manager	1998-07-27 00:00:00+00	1044.94	Olivia Haig	5	
50131	Joseph Chapman	Customer service manager	1999-05-06 00:00:00+00	1571.45	Anthony Crocket	5	
50132	Abigail Attwood	Business development manager	2000-02-02 00:00:00+00	1180.47	Antonio Cowell	5	
50133	Jeffery Brickman	Business development manager	1999-04-12 00:00:00+00	1190.04	Alexander Leman	5	
50134	Jayden Rose	Assistant manager	2017-02-06 00:00:00+00	1805.54	Aaron Evans	5	
50135	Charlotte Audley	Business development manager	2023-10-27 00:00:00+00	1217.86	Jeffery Wood	5	
50136	Jesus Fletcher	Software engineer	2002-02-09 00:00:00+00	1035.81	Elizabeth Wilson	5	
50137	Justin Benson	Customer service manager	2007-12-28 00:00:00+00	1311.30	Charlie Evans	5	
50138	Jeremiah Neville	Customer service manager	2016-02-14 00:00:00+00	1793.91	Aaron Mason	5	
50139	Oliver White	Assistant manager	2012-10-19 00:00:00+00	1820.84	Jordan Harrison	5	
50140	Eleanor Boolman	Assistant manager	2002-03-05 00:00:00+00	1654.03	Jonathan Vance	5	
50141	Austin Duncan	Assistant manager	2021-05-17 00:00:00+00	1826.46	Emma Vance	5	
50142	Erin Boolman	Talent acquisition manager	2008-06-15 00:00:00+00	1077.46	Abigail Tracy	5	
50143	Alexander Tracy	Administrative assistant	1995-02-02 00:00:00+00	1890.79	Olivia Moor	5	
50144	Ethan Attwood	Administrative assistant	2015-05-01 00:00:00+00	1056.78	Adam White	5	
50145	Jack Tracy	Software engineer	2018-10-25 00:00:00+00	1211.05	Ashton Barlow	5	
50146	Alex Neville	Recruitment manager	2011-03-20 00:00:00+00	1754.30	Jacob Fletcher	5	
50147	Adrian Cloud	Customer service manager	2007-10-11 00:00:00+00	1023.87	Sophia Boolman	5	
50148	Antonio Pearcy	Business development manager	2014-04-18 00:00:00+00	1064.31	Joshua Chapman	5	
50149	Oliver White	Sales manager	2023-04-07 00:00:00+00	1983.07	Jeffery Haig	5	
50150	Jordan Palmer	Legal counsel	2005-04-01 00:00:00+00	1896.81	Emma Vance	5	
50151	Isabella Carey	Assistant manager	2019-02-04 00:00:00+00	1519.89	Thomas Miln	5	
50152	Jacob White	Software engineer	1998-05-09 00:00:00+00	1629.72	Joshua Bott	5	
50153	Adrian Boolman	Administrative assistant	2017-02-13 00:00:00+00	1043.00	Sophia Wilson	5	
50154	Sophia Leman	Assistant manager	1999-02-05 00:00:00+00	1234.28	Anthony Crocket	5	
50155	Jackson Cowell	Sales manager	2016-05-17 00:00:00+00	1520.26	Jesus Saunders	5	
50156	Alex Saunders	Sales manager	2023-08-27 00:00:00+00	1606.64	Harry Cowell	5	
50157	Antonio Hawkins	Customer service manager	1996-03-22 00:00:00+00	1873.50	Jonathan Vance	5	
50158	Ethan Leman	Talent acquisition manager	2001-10-03 00:00:00+00	1531.55	Emma White	5	
50159	Madison Vance	Administrative assistant	2013-12-18 00:00:00+00	1054.43	Jonathan Vance	5	
50160	Joshua Wilson	Software engineer	2002-08-16 00:00:00+00	1295.79	Antonio Larkins	5	
50161	Joshua Berrington	Administrative assistant	2018-02-05 00:00:00+00	1694.51	Antonio Cowell	5	
50162	Ella Finch	Business development manager	2006-07-06 00:00:00+00	1959.92	Thomas Miln	5	
50163	James Miln	Talent acquisition manager	2011-08-11 00:00:00+00	1455.62	Sophia Wilson	5	
50164	Jeremiah Evans	Recruitment manager	2003-02-05 00:00:00+00	1078.12	Alejandro Audley	5	
50165	Adam Cowell	Software engineer	2010-02-16 00:00:00+00	1304.69	Alan Moor	5	
50166	Jordan Miln	Business development manager	2016-07-20 00:00:00+00	1341.35	Jeffery Haig	5	
50167	Evelyn Barlow	Legal counsel	2014-07-16 00:00:00+00	1278.06	Joshua Fletcher	5	
50168	James Finch	Recruitment manager	1999-05-17 00:00:00+00	1840.55	Thomas Miln	5	
50169	Andrew Cloud	Sales manager	1995-08-25 00:00:00+00	1779.06	Olivia Haig	5	
50170	Julian Sherlock	Legal counsel	2021-04-26 00:00:00+00	1881.95	Elizabeth Wilson	5	
50171	Mia Carey	Administrative assistant	2002-11-25 00:00:00+00	1254.35	Jaden Wood	5	
50172	Jack Cloud	Customer service manager	1999-01-10 00:00:00+00	1215.77	Justin Carey	5	
50173	Jaden Rose	Sales manager	2021-03-08 00:00:00+00	1399.34	Alan Berrington	5	
50174	Emily Sherlock	Legal counsel	2023-09-18 00:00:00+00	1998.24	Alan Berrington	5	
50175	Jack Fletcher	Recruitment manager	2009-11-04 00:00:00+00	1404.14	Sophia Wilson	5	
50176	Juan Benson	Customer service manager	2009-05-20 00:00:00+00	1266.17	Emma Vance	5	
50177	Charlie Vance	Legal counsel	2017-10-03 00:00:00+00	1707.66	Jaden Wood	5	
50178	Alejandro Saunders	Sales manager	2019-09-18 00:00:00+00	1408.23	Isabella Mason	5	
50179	Jesus Gibbs	Legal counsel	2012-04-05 00:00:00+00	1720.03	Joshua Benson	5	
50180	Alex Wilson	Administrative assistant	2015-07-03 00:00:00+00	1493.91	Harry Cowell	5	
50182	Aaron Rose	Talent acquisition manager	2002-04-10 00:00:00+00	1296.69	Charlotte Dodson	5	
50183	Jeffery Carey	Talent acquisition manager	2002-01-14 00:00:00+00	1846.62	Jaden Gibbs	5	
50184	Jordan Palmer	Customer service manager	2016-07-27 00:00:00+00	1721.11	Olivia Haig	5	
50185	Julian White	Administrative assistant	2013-04-14 00:00:00+00	1237.60	Emma White	5	
50186	Jason Sykes	Sales manager	2024-08-08 00:00:00+00	1631.21	Abigail Tracy	5	
50188	Eleanor Johnson	Business development manager	2003-02-04 00:00:00+00	1264.79	Jaden Wood	5	
50189	Adrian Harrison	Customer service manager	2012-01-24 00:00:00+00	1107.78	James White	5	
50190	Thomas Rose	Assistant manager	2015-09-11 00:00:00+00	1592.75	Ethan Gill	5	
50191	Jason Crocket	Talent acquisition manager	2019-08-26 00:00:00+00	1119.34	Jacob Fletcher	5	
50192	Alexander Gates	Customer service manager	2009-09-07 00:00:00+00	1101.94	Jonathan Vance	5	
50193	Jason Tracy	Software engineer	2022-04-03 00:00:00+00	1846.70	Justin Carey	5	
50194	Jake Chapman	Legal counsel	2015-06-09 00:00:00+00	1308.70	Elizabeth Wilson	5	
50195	William Bates	Customer service manager	1999-03-26 00:00:00+00	1451.01	Emma Vance	5	
50196	Jack Vance	Sales manager	2018-09-04 00:00:00+00	1448.61	Jeffery Wood	5	
50197	Sophia Hawkins	Sales manager	2016-07-24 00:00:00+00	1958.39	Alan Moor	5	
50198	Jaden Hawkins	Recruitment manager	2010-10-24 00:00:00+00	1942.96	Joshua Benson	5	
50199	Evelyn Audley	Business development manager	1999-11-22 00:00:00+00	1057.84	Charlotte Dodson	5	
50200	Adam Hawkins	Talent acquisition manager	2022-08-07 00:00:00+00	1374.79	Aidan Gill	5	
50201	Julian Finch	Talent acquisition manager	1998-11-26 00:00:00+00	1502.23	Jonathan Vance	5	
50202	Jacob Bott	Customer service manager	2000-08-02 00:00:00+00	1973.86	Alan Berrington	5	
50203	James Pearcy	Recruitment manager	1999-04-23 00:00:00+00	1315.05	Jacob Fletcher	5	
50204	Olivia Palmer	Talent acquisition manager	2005-02-10 00:00:00+00	1500.95	Alex Green	5	
50181	Ella Webster	Sales manager	2017-11-20 00:00:00+00	1414.08	Emma White	5	images/1663667551_22-mykaleidoscope-ru-p-zloi-bukhgalter-instagram-30_DbpS4PL_LnttnTI.jpg
50187	Jack Dodson	Customer service manager	2011-04-02 00:00:00+00	1533.50	Aaron Evans	5	images/i_1.webp
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 28, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 7, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 23, true);


--
-- Name: employeesapp_employee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.employeesapp_employee_id_seq', 50204, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: employeesapp_employee employeesapp_employee_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employeesapp_employee
    ADD CONSTRAINT employeesapp_employee_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: employeesapp_employee_chief_f11c9121; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX employeesapp_employee_chief_f11c9121 ON public.employeesapp_employee USING btree (chief);


--
-- Name: employeesapp_employee_chief_f11c9121_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX employeesapp_employee_chief_f11c9121_like ON public.employeesapp_employee USING btree (chief varchar_pattern_ops);


--
-- Name: employeesapp_employee_name_a5545051; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX employeesapp_employee_name_a5545051 ON public.employeesapp_employee USING btree (name);


--
-- Name: employeesapp_employee_name_a5545051_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX employeesapp_employee_name_a5545051_like ON public.employeesapp_employee USING btree (name varchar_pattern_ops);


--
-- Name: employeesapp_employee_position_4f91365e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX employeesapp_employee_position_4f91365e ON public.employeesapp_employee USING btree ("position");


--
-- Name: employeesapp_employee_position_4f91365e_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX employeesapp_employee_position_4f91365e_like ON public.employeesapp_employee USING btree ("position" text_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

